# Switch DNS Tools
# author: Luojinghui
# email: luojinghui424@gmail.com

#!/usr/bin/env bash

OPTIONS_STUCKLONG=t
# shellcheck disable=SC2034
OPTIONS_KEEPDASHDASH=
# shellcheck disable=SC2034
OPTIONS_SPEC="\
switch [options]
switch [env] [network]
--
  Switch pre/default dns config.
  https://github.com/luojinghui/switch

  Available options are
p,pre!      switch pre dns
"

SUBDIRECTORY_OK='Yes'

strWifi="Wi-Fi"
strAX="AX88x72A"
srtLAN="USB 10/100/1000 LAN"

# Defaults
is_pre=0
is_default=0
device="$(networksetup -listallnetworkservices)"

if [[ $device =~ $strWifi ]];
then
    isHaveWifi='1';
else 
    isHaveWifi='0';
fi

if [[ $device =~ $strAX ]];
then
    isHaveAX='1';
else 
    isHaveAX='0';
fi

if [[ $device =~ $srtLAN ]];
then
    isHaveLan='1';
else 
    isHaveLan='0';
fi

while test $# != 0; do
  case "$1" in
  -p) is_pre=1;;
  --pre) is_pre=1;;
  --) shift; break ;;
  esac
  shift
done

if (( is_pre )); then
  if (($isHaveWifi == '1')); then
  networksetup -setdnsservers Wi-Fi $2
  fi

  if (( $isHaveAX == '1' )); then
  networksetup -setdnsservers AX88x72A $2
  fi

  if (( $isHaveLan == '1' )); then
  networksetup -setdnsservers "USB 10/100/1000 LAN" $2
  fi

  echo "now is pre env!"
  # networksetup -setdnsservers Thunderbolt $2
else
  if (($isHaveWifi == '1')); then
  networksetup -setdnsservers Wi-Fi empty
  fi

  if (( $isHaveAX == '1' )); then
  networksetup -setdnsservers AX88x72A empty
  fi

  if (( $isHaveLan == '1' )); then
  networksetup -setdnsservers "USB 10/100/1000 LAN" empty
  fi
  
  dscacheutil -flushcache
  echo "now is default env!"
  # networksetup -setdnsservers Thunderbolt empty
fi
